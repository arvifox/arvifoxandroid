<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <androidx.coordinatorlayout.widget.CoordinatorLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true"
        tools:context=".simplemisc.view.NestedScrollActivity">

        <include
            android:id="@+id/incAppBar"
            layout="@layout/app_bar_layout" />

        <androidx.core.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:app="http://schemas.android.com/apk/res-auto"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:paddingLeft="8dp"
                android:paddingRight="8dp">

                <TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:gravity="center"
                    android:paddingTop="8dp"
                    android:paddingBottom="8dp"
                    android:text="Section Scrolls"
                    android:textSize="18sp" />

                <androidx.cardview.widget.CardView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:layout_marginBottom="8dp"
                    app:cardBackgroundColor="#B39DDB"
                    app:cardCornerRadius="2dp"
                    app:cardElevation="3dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:padding="8dp"
                        android:paddingTop="8dp"
                        android:paddingBottom="8dp"
                        android:text="ormance by building a profile of the app's most important hot code and focusing its optimization effort on it. This leads to big improvements while reducing the traditional memory and storage impact of a fully compiled app. However,\n it relies on the device to optimize apps based on these code profiles in idle maintenanc" />

                </androidx.cardview.widget.CardView>

                <androidx.cardview.widget.CardView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:layout_marginBottom="8dp"
                    android:padding="8dp"
                    app:cardBackgroundColor="#B39DDB"
                    app:cardCornerRadius="2dp"
                    app:cardElevation="3dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:padding="8dp"
                        android:paddingTop="8dp"
                        android:paddingBottom="8dp"
                        android:text="new optimization feature that greatly improves the application startup time after a new install or update. On average, we have observed that apps start 15% faster (cold startup) across a variety of devices. Some hero cases even show 30%+ faster startup times. One of the most important aspects is that users get this for free, without any effort from their side or from develope" />

                </androidx.cardview.widget.CardView>

                <androidx.cardview.widget.CardView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:layout_marginBottom="8dp"
                    android:padding="8dp"
                    app:cardBackgroundColor="#B39DDB"
                    app:cardCornerRadius="2dp"
                    app:cardElevation="3dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:padding="8dp"
                        android:paddingTop="8dp"
                        android:paddingBottom="8dp"
                        android:text="All of the views in a window are arranged in a single tree. You can add views either from code or by specifying a tree of views in one or more XML layout files. There are many specialized subclasses of views that act as controls or are capable of displaying text, images, or other content.\n
Once you have created a tree of views, there are typically a few types of common operations you may wish to perform:" />
                </androidx.cardview.widget.CardView>

                <androidx.cardview.widget.CardView
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    app:cardBackgroundColor="#399D2B">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:orientation="vertical">

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:gravity="center"
                            android:paddingTop="8dp"
                            android:paddingBottom="8dp"
                            android:text="Content Scrolls"
                            android:textSize="18sp" />

                        <androidx.core.widget.NestedScrollView
                            android:layout_width="match_parent"
                            android:layout_height="96dp"
                            android:paddingBottom="16dp">

                            <TextView
                                android:layout_width="match_parent"
                                android:layout_height="match_parent"
                                android:text="All of the views in a window are arranged in a single tree. You can add views either from code or by specifying a tree of views in one or more XML layout files. There are many specialized subclasses of views that act as controls or are capable of displaying text, images, or other content.\n
Once you have created a tree of views, there are typically a few types of common operations you may wish to perform:
Set properties: for example setting the text of a TextView. The available properties and the methods that set them will vary among the different subclasses of views. Note that properties that are known at build time can be set in the XML layout files.\n
Set focus: The framework will handle moving focus in response to user input. To force focus to a specific view, call requestFocus().
Set up listeners: Views allow c" />
                        </androidx.core.widget.NestedScrollView>
                    </LinearLayout>

                </androidx.cardview.widget.CardView>

            </LinearLayout>
        </androidx.core.widget.NestedScrollView>

    </androidx.coordinatorlayout.widget.CoordinatorLayout>
</layout>